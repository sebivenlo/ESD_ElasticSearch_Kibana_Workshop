GET _nodes/stats

#with this we create the favourite_pets index, must use PUT
PUT favourite_pets

#with POST elastic search will create an ID for you
POST favourite_pets/_doc
{
  "name": "Pietra",
  "Species": "dragon"
}



# Won't work, PUT needs an ID
PUT favourite_pets/_doc/1
{
  "name": "Tupac",
  "Species": "Dog"
}

## geeft een update omdat we PUT gebruiken en ID is the same
PUT favourite_pets/_doc/1
{
  "name": "Jantjuh",
  "kanvanalleszijn": "jazeker dit is een document"
}

#with this we delete the index favourite_pets
DELETE /favourite_pets



# With this we search the entire favourite_pets index.
get favourite_pets/_search


#you can also add custom settings when creating index
PUT /markindex
{
"settings": {
"index.number_of_shards": 4,
"index.number_of_replicas": 0
  }
}

# GET _API/parameter ( what you want to have )
# so 
# GET _cluster/health is from the "cluster"API of wich you request health information
# Zo is er ook de nodes api : GET _nodes/stats

POST /_bulk
{"index" : {"_index" : "markindex", "_id" : 1}}
{"ball": "blue-ball"}
{"index" : {"_index" : "markindex", "_id" : 2}}
{"ball": "red-ball"}
{"index" : {"_index" : "favourite_pets", "_id" : 2}}
{"name": "bigboi", "species":"drgor"}
  


POST _bulk
{ "index" : { "_index" : "test", "_id" : "1" } }
{ "field1" : "value1" }
{ "delete" : { "_index" : "test", "_id" : "2" } }
{ "create" : { "_index" : "test", "_id" : "3" } }
{ "field1" : "value3" }
{ "update" : {"_id" : "1", "_index" : "test"} }
{ "doc" : {"field2" : "value2"} }



get markindex/_search
get favourite_pets/_stats
get favourite_pets/_search

GET markindex/_search
{
  "query" : {
    "match" : {
      "ball" : "blue" #or try ball
    }
  }
}
# there is also match_phrase instead of match
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
}

